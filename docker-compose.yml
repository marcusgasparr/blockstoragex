services:
  mysql:
    image: mysql:8.0
    container_name: blockstoragex_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: blockstoragex
      MYSQL_USER: bsgx
      MYSQL_PASSWORD: 123456
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - file_manager_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: blockstoragex_backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    volumes:
      - ./storage:/app/storage
      - ./backend:/app
      - /app/node_modules
      - "c:/:/app/C"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - HOST=0.0.0.0
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=bsgx
      - DB_PASSWORD=123456
      - DB_NAME=blockstoragex
      - STORAGE_PATH=/app/storage
      - CORS_ORIGINS=http://localhost:3000,http://frontend:3000
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - file_manager_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: blockstoragex_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_BASE_URL=http://localhost:3001
      - VITE_NODE_ENV=production
      - VITE_DEBUG=false
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - file_manager_network

volumes:
  mysql_data:

networks:
  file_manager_network:
    driver: bridge